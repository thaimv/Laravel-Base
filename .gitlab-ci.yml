stages:
  - CheckPhpcs
  - CheckHashKey
  - Deploy

.PhpcsScan: &PhpcsScan |
  pushComment(){
      curl --request POST --header "PRIVATE-TOKEN: $USER_TOKEN" \
      --form "note=$OUTPUT" --form "path=dudeism.md" \
      --form "line=1" --form "line_type=new" \
      https://git.hblab.vn/api/v4/projects/$CI_PROJECT_ID/repository/commits/$CI_COMMIT_SHA/comments
      echo $OUTPUT
      exit 1
  }

  OUTPUT=$(phpcs --standard=PSR2 app/) || pushComment


CheckHashKey:
  stage: CheckHashKey
  image: node:14.18.1
  script:
    - (($(find ./app/ -type f -name "*.blade.php" -o -name "*.php" -not -exec grep -L "$(cat .hashkey)" {} + | wc -l) == 0 ))


Phpcs:
  stage: CheckPhpcs
  image: php:8.1.1-alpine
  script:
    - curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
    - curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar
    - mv phpcs.phar /usr/local/bin/phpcs && chmod +x /usr/local/bin/phpcs
    - mv phpcbf.phar /usr/local/bin/phpcbf && chmod +x /usr/local/bin/phpcbf
    - *PhpcsScan

Deploy:
  stage: Deploy
  image: php:8.4
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH == $DEV_DEPLOY_BRANCH
  environment:
    name: develop
  script:
    - eval $(ssh-agent -s) && echo "$DEV_DEPLOY_SSH_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\tControlMaster auto\n\tControlPath /tmp/ansible-%r@%h:%p\n\tControlPersist 15m\n\tPreferredAuthentications publickey
  \n\n" > ~/.ssh/config'
    - chmod go-wrx ~/.ssh
    - chmod +x -R .platform-dev
    - apt-get install -y libzip-dev libpng-dev zip
    - docker-php-ext-install zip gd bcmath pdo_mysql
    - composer install && composer dump-autoload
    - echo "$DEV_DEPLOY_ENV_FILE" > .env && echo "OK" > public/health.html
    - rsync -azPq --exclude='.git' --exclude='node_modules' ./ $DEV_DEPLOY_USER@$DEV_DEPLOY_HOST:$DEV_DEPLOY_DIR/
    - ssh $DEV_DEPLOY_USER@$DEV_DEPLOY_HOST "source ~/.profile && cd $DEV_DEPLOY_DIR && php artisan migrate && eb deploy $DEV_EB_ENV_NAME -l $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA --timeout 30"
